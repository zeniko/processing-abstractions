{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-06T23:59:13.478+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:20:28.581+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "8FCcZlTwDQCSzgq3CEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In eine grundlegendere Sprache; hier Smalltalk, in anderen Fällen z.B. C/C++ oder - für den Browser - JavaScript."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:54:30.88+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:55:00.024+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ACOha1TwDQCW2cBICEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In eine stark vereinfachte Sprache, welche einfacher analysiert und in Maschinensprache übersetzt werden kann."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:55:00.284+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:20:54.098+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "YM5hbVTwDQCZO/7BCEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "In Maschinensprache: Das sind letztlich die Bytes, welche der Prozessor (oder in unserem Fall ein virtueller Prozessor) erhält."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-06T23:58:31.526+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-06T23:59:11.709+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cBZJdODwDQCJIOilCbxHlA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Die Struktur, welche der Parser aus den Token erstellt, heisst \"abstrakter Syntax-Baum\" (kurz: AST). Diese Struktur kann nun weiter übersetzt werden:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:56:32.283+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:57:24.816+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "2IndclTwDQCf+HHFCEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Maschinensprache besteht aus wenigen unterschiedlichen Befehlen, da ein Prozessor für jeden Befehl Logik-Schaltkreise benötigt. Zudem sollen die Befehle möglichst schnell ausgeführt werden."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:57:37.753+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:59:28.703+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "WGYFdlTwDQCkVyiWCEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Stark vereinfachte Zwischensprachen bestehen bereits aus weniger Befehlen, sind aber noch halbwegs lesbar für Menschen. Auf dieser Stufe sehen unterschiedliche Konzepte wie Verzweigungen und Schleifen teilweise bereits (fast) gleich aus, damit sie auf dieselbe Art optimiert werden können: beides sind letztlich bedingte Sprünge."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-04-30T00:59:29.971+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-02T12:20:13.405+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "OOd0fVTwDQCsaHRPCEFArw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Je komplizierter eine Ausgangssprache ist, desto eher hilft es, diese zuerst in eine bloss etwas einfachere Sprache zu übersetzen. Zudem bestehen für viele grundlegendere Sprachen bereits Compiler, welche wiederverwendet werden können. In unserem Beispiel wird Processing nach Smalltalk übersetzt, da Glamorous Toolkit bereits einen Smalltalk-Compiler enthält."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T00:55:53.55+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-12T00:21:28.384+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wEH2aVTwDQCVRd7qCEFArw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Die Übersetzung in Maschinensprache nennt sich \"compilieren\", andere Übersetzungen werden oft auch \"transpilieren\" genannt. Die anderen Übersetzungen finden oft statt, da auf den unterschiedlichen Stufen verschiedenes relevant ist:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T00:56:42.132+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:01:05.553+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "IOJzc1TwDQCf/SXTCEFArw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Betrachten wir diese Schritte für ein (veränderbares!) Programm:"
			},
			{
				"__type" : "processingSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:01:07.795+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T17:53:33.132+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iF1Jg1TwDQC1V9HhCEFArw=="
				},
				"code" : "a = 2\rwhile a < 5:\r\ta = a + 1\rprint(a)"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:04:20.504+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-12T00:22:53.232+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "wBXGjlTwDQC4uewrCEFArw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Hier zur Wiederholung zuerst noch einmal der abstrakte Syntax-Baum (AST) mit den strukturierten *Token*:"
			},
			{
				"__type" : "elementSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:04:31.53+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-09T01:19:36.406+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "EFRuj1TwDQC5Z1GdCEFArw=="
				},
				"code" : "(ProcessingSource fromPage: thisSnippet page) renderLiveView: #gtTreePlusSourceFor:",
				"elementHeight" : 266,
				"codeHeight" : 50,
				"codeVisible" : false
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:01:55.667+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-02T12:20:28.096+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QH9jhVTwDQC2Kce6CEFArw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Dieses Programm wird nun in unserem Fall, ausgehend vom AST, zuerst nach Smalltalk übersetzt:"
			},
			{
				"__type" : "elementSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:02:21.54+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-09T01:20:00.469+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "oNauh1TwDQC4HTT9CEFArw=="
				},
				"code" : "(ProcessingSource fromPage: thisSnippet page) renderLiveView: #gtTranspilationFor:",
				"elementHeight" : 196,
				"codeHeight" : 50,
				"codeVisible" : false
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-30T01:02:18.011+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-12T00:19:18.663+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "eP14h1TwDQC4GOMbCEFArw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Soweit erkennen Sie wohl keinen grossen Unterschied, ausser dass die Befehle etwas anders angeordnet sind (vgl. die untenstehenden Aufgaben)."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:23:17.183+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:23:17.547+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "GEoLYkXxDQCCO/VXDKPJJA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "1. Vergleichen Sie den Python und Smalltalk Code. Worin unterscheiden sich diese beiden Sprachen? Notieren Sie drei Unterschiede."
						},
						{
							"__type" : "commentSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:27:30.254+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:31:16.098+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sNggcUXxDQCE7GuLDKPJJA=="
							},
							"string" : "Smalltalk verwendet \":=\" für Zuweisungen (und \"=\" für Vergleiche).\r\nIn Smalltalk enden alle Befehlszeilen mit einem \".\".\r\nIn Smalltalk werden zusammengehörende Befehle in eckigen Klammern geschrieben.\r\nIn Smalltalk bedeutet das \":\", dass eine Funktion ausgeführt wird (Python nutzt dafür runde Klammern).\r\nHier hat es schliesslich einige zusätzliche Wörter, die mit \"gt\" beginnen. Diese sind nötig, da in Smalltalk alle Befehle in einer Funktion und alle Funktionen innerhalb eines \"Objekts\" sein müssen.",
							"isHidden" : true
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:24:00.078+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:33:55.594+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "sNCZZEXxDQCCZQBeDKPJJA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "2. Vermuten Sie, was der Code machen wird und führen Sie ihn dann wieder aus (Klick auf \" ▶ \" oder Klick in den Code ganz oben an der Seite und `Ctrl+R`)."
						},
						{
							"__type" : "commentSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:27:18.636+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-05-12T00:33:47.755+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "4JFvcEXxDQCE55j9DKPJJA=="
							},
							"string" : "Der ursprüngliche Code weist der Variable `a` den Wert 2 zu; vergrössert und speichert diesen Wert dann, solange er kleiner als 5 ist; und gibt schliesslich den Wert von `a` aus, der zu diesem Zeitpunkt 5 sein sollte. Sie können die einzelnen Schritte über \" ▶`i` \" bzw. `Ctrl+G` untersuchen.",
							"isHidden" : true
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:08:48.997+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:11:48.026+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "uIKgiiH3DQCNrdlqBgbCFw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "3. Sie sehen hier für zwei verschiedene Programmiersprachen die Syntax, welche zum gleichen abstrakten Syntaxbaum (AST) gehört. Machen Sie einen Vorschlag für eine dritte Art, den Code darzustellen. Worauf liesse sich z.B. alles verzichten, ohne dass das Programm unlesbar bzw. uneindeutig wird? Wie sähe Ihre Notation für das obenstehende Programm dann aus?"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:11:48.778+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:11:48.778+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "EMhXlSH3DQCXtm9bBgbCFw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : ""
						},
						{
							"__type" : "commentSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:16:04.648+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:19:44.072+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "4CPHlSH3DQCXwaFNBgbCFw=="
							},
							"string" : "Sie finden unten zwei verschiedene Syntax-Vorschläge: Beim linken werden für jeden Knoten eines Baumes alle Teile in einer Klammer notiert (reine Präfix-Notation), beim rechten werden dagegen jeweils zuerst die Argumente und erst ganz am Ende der Knoten des Baums notiert (reine Postfix-Notation). In beiden Fällen ist die Syntax einfacher als die gemischte Syntax von Processing oder Smalltalk, was Lexer und Parser stark vereinfachen würde.\r\n\r\nTipp: Falls Sie das unter diesem Kommentar stehende Element nicht mit der Maus vergrössern können, klicken Sie ans Ende dieses Kommentares, tippen Sie die `↓` Taste und ziehen Sie dann den erscheinenden blauen Balken nach unten.",
							"isHidden" : true
						},
						{
							"__type" : "elementSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:12:01.194+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2025-07-25T14:14:16.158+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "EDwVliH3DQCXxwfoBgbCFw=="
							},
							"code" : "program := (ProcessingSource fromPage: thisSnippet page) program.\rViewComparison\r\tnewFor: {program -> #gtTranspilationPrefixFor:.\r\t\t\tprogram -> #gtTranspilationPostfixFor:}",
							"elementHeight" : 45,
							"codeHeight" : 77,
							"codeVisible" : false
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-12T00:23:10.321+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-05-12T00:23:14.495+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "aJWiYUXxDQCB9di/DKPJJA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "## Aufgaben 📝"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-04-01T23:54:38.764+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-05-06T23:46:43.014+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Transpiler: AST übersetzen"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "1044f751-20ee-0d00-a653-170703b7525c"
	}
}